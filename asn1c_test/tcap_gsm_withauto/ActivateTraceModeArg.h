/*
 * Generated by asn1c-0.9.28 (http://lionet.info/asn1c)
 * From ASN.1 module "MAP-OM-DataTypes"
 * 	found in "MAP-OM-DataTypes.asn"
 * 	`asn1c -pdu=auto`
 */

#ifndef	_ActivateTraceModeArg_H_
#define	_ActivateTraceModeArg_H_


#include <asn_application.h>

/* Including external dependencies */
#include "IMSI.h"
#include "TraceReference.h"
#include "TraceType.h"
#include "AddressString.h"
#include "TraceReference2.h"
#include "TraceNE-TypeList.h"
#include "GSN-Address.h"
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Forward declarations */
struct ExtensionContainer;
struct TraceDepthList;
struct TraceInterfaceList;
struct TraceEventList;

/* ActivateTraceModeArg */
typedef struct ActivateTraceModeArg {
	IMSI_t	*imsi	/* OPTIONAL */;
	TraceReference_t	 traceReference;
	TraceType_t	 traceType;
	AddressString_t	*omc_Id	/* OPTIONAL */;
	struct ExtensionContainer	*extensionContainer	/* OPTIONAL */;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	TraceReference2_t	*traceReference2	/* OPTIONAL */;
	struct TraceDepthList	*traceDepthList	/* OPTIONAL */;
	TraceNE_TypeList_t	*traceNE_TypeList	/* OPTIONAL */;
	struct TraceInterfaceList	*traceInterfaceList	/* OPTIONAL */;
	struct TraceEventList	*traceEventList	/* OPTIONAL */;
	GSN_Address_t	*traceCollectionEntity	/* OPTIONAL */;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} ActivateTraceModeArg_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_ActivateTraceModeArg;

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "ExtensionContainer.h"
#include "TraceDepthList.h"
#include "TraceInterfaceList.h"
#include "TraceEventList.h"

#endif	/* _ActivateTraceModeArg_H_ */
#include <asn_internal.h>
